version: '3.9'

services:
  app:
    image: jakubzajkowski/cowrite-user-service:latest
    container_name: cowrite-app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: ${APP_DATABASE_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_COOKIE_NAME: ${JWT_COOKIE_NAME}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      SPRING_APPLICATION_NAME: ${SPRING_APPLICATION_NAME}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
    depends_on:
      - db
    restart: unless-stopped

  ai:
    image: jakubzajkowski/cowrite-ai-service:latest
    container_name: cowrite-ai
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: ${AI_DATABASE_URL}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      USER_SERVICE_URL: ${USER_SERVICE_URL}
      USER_COOKIE_NAME: ${USER_COOKIE_NAME}
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: cowrite-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    restart: unless-stopped

  frontend:
    image: jakubzajkowski/cowrite-web:latest
    container_name: cowrite-web
    ports:
      - "3000:80"
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - app
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    restart: unless-stopped

volumes:
  db_data:
  grafana_data:
