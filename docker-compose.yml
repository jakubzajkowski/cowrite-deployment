version: '3.9'

services:
  app:
    image: jakubzajkowski/cowrite-user-service:latest
    container_name: cowrite-app
    environment:
      SPRING_DATASOURCE_URL: ${APP_DATABASE_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_COOKIE_NAME: ${JWT_COOKIE_NAME}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      SPRING_APPLICATION_NAME: ${SPRING_APPLICATION_NAME}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
    mem_limit: 512m
    cpus: 0.5
    depends_on:
      - db
    networks:
      - internal
    restart: unless-stopped

  ai:
    image: jakubzajkowski/cowrite-ai-service:latest
    container_name: cowrite-ai
    environment:
      DATABASE_URL: ${AI_DATABASE_URL}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      USER_COOKIE_NAME: ${USER_COOKIE_NAME}
      USER_SERVICE_URL: ${USER_SERVICE_URL}
    mem_limit: 256m
    cpus: 0.5
    depends_on:
      - db
      - app
    networks:
      - internal
      - public
    restart: unless-stopped

  frontend:
    image: jakubzajkowski/cowrite-web:latest
    container_name: cowrite-web
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd:ro
    depends_on:
      - app
      - ai
    networks:
      - internal
      - public
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=http://localhost/prometheus/'
      - '--web.route-prefix=/'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    mem_limit: 128m
    cpus: 0.25
    depends_on:
      - app
    networks:
      - internal
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    networks:
      - internal
    restart: unless-stopped

volumes:
  db_data:
  grafana_data:

networks:
  internal:
    driver: bridge
    internal: true
  public:
    driver: bridge
